name: product-management-system

services:
    apis:
        build: 
            context: .
        container_name: product-management-system
        hostname: product-management-system
        ports:
            - 3000:3000
        volumes:
            - ./src/:/app/src/
            - .env/:/app/.env
        restart: on-failure
        networks:
            - app-network
        depends_on:
            - redis
            - mongodb1

    redis:
        image: redis:latest
        container_name: redis
        hostname: redis
        restart: on-failure
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        networks:
            - app-network
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 10s
            timeout: 30s
            retries: 5

    mongodb1:
        image: mongo:latest
        container_name: mongodb1
        hostname: mongodb1
        restart: on-failure
        ports:
            - '37017:27017'
        networks:
            - app-network
        volumes:
            - mongodb1_data:/data/db
            - mongodb1_config:/data/configdb
        command: mongod --bind_ip_all --replSet rs0 --port 27017 --wiredTigerCacheSizeGB 1
        healthcheck:
            test: |
                mongosh --eval "
                try {
                    rs.status();
                } catch (err) {
                    rs.initiate({
                        _id: 'rs0',
                        members: [
                            { _id: 0, host: 'mongodb1:27017' },
                            { _id: 1, host: 'mongodb2:27018' },
                            { _id: 2, host: 'mongodb3:27019' }
                        ]
                    });
                }
                "
            interval: 10s
            timeout: 60s
            retries: 30
            start_period: 40s
        depends_on:
            - mongodb2
            - mongodb3

    mongodb2:
        image: mongo:latest
        container_name: mongodb2
        hostname: mongodb2
        networks:
            - app-network
        restart: on-failure
        ports:
            - '37018:27018'
        volumes:
            - mongodb2_data:/data/db
            - mongodb2_config:/data/configdb
        command: mongod --bind_ip_all --replSet rs0 --port 27018 --wiredTigerCacheSizeGB 1

    mongodb3:
        image: mongo:latest
        container_name: mongodb3
        hostname: mongodb3
        networks:
            - app-network
        restart: on-failure
        ports:
            - '37019:27019'
        volumes:
            - mongodb3_data:/data/db
            - mongodb3_config:/data/configdb
        command: mongod --bind_ip_all --replSet rs0 --port 27019 --wiredTigerCacheSizeGB 1

volumes:
    mongodb1_data:
    mongodb2_data:
    mongodb3_data:
    mongodb1_config:
    mongodb2_config:
    mongodb3_config:
    redis_data:

networks:
    app-network:
        driver: bridge